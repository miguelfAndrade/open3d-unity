
=================================================================
	Native Crash Reporting
=================================================================
Got a SIGSEGV while executing native code. This usually indicates
a fatal error in the mono runtime or one of the native libraries 
used by your application.
=================================================================
Caught fatal signal - signo:11 code:1 errno:0 addr:0xfffffffffffffff8
Caught fatal signal - signo:11 code:1 errno:0 addr:0xfffffffffffffff8
Caught fatal signal - signo:11 code:1 errno:0 addr:0xfffffffffffffff8

=================================================================
	Native stacktrace:
=================================================================
	0x7ffe8b945062 - /home/miguel/Unity/Hub/Editor/2021.3.15f1/Editor/Data/MonoBleedingEdge/MonoEmbedRuntime/libmonobdwgc-2.0.so : 
	0x7ffe8b8edd3d - /home/miguel/Unity/Hub/Editor/2021.3.15f1/Editor/Data/MonoBleedingEdge/MonoEmbedRuntime/libmonobdwgc-2.0.so : 
	0x7ffe8b873250 - /home/miguel/Unity/Hub/Editor/2021.3.15f1/Editor/Data/MonoBleedingEdge/MonoEmbedRuntime/libmonobdwgc-2.0.so : 
	0x7fffed133980 - /lib/x86_64-linux-gnu/libpthread.so.0 : 
	0x7ffdb538657d - /home/miguel/Teste_Unity/PluginSource/teste_open3d/cmake-build-debug/open3d/lib/libOpen3D.so : _ZNK9nanoflann12KNNResultSetIdlmE9worstDistEv
	0x7ffdb6039cce - /home/miguel/Teste_Unity/PluginSource/teste_open3d/cmake-build-debug/open3d/lib/libOpen3D.so : _ZNK9nanoflann24KDTreeSingleIndexAdaptorINS_10L2_AdaptorIdNS_24KDTreeEigenMatrixAdaptorIN5Eigen3MapIKNS3_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS3_6StrideILi0ELi0EEEEELin1ENS_9metric_L2ELb0EEEdEESC_Lin1ElE11searchLevelINS_12KNNResultSetIdlmEEEEbRT_PKdPNS
	0x7ffdb6039f1f - /home/miguel/Teste_Unity/PluginSource/teste_open3d/cmake-build-debug/open3d/lib/libOpen3D.so : _ZNK9nanoflann24KDTreeSingleIndexAdaptorINS_10L2_AdaptorIdNS_24KDTreeEigenMatrixAdaptorIN5Eigen3MapIKNS3_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS3_6StrideILi0ELi0EEEEELin1ENS_9metric_L2ELb0EEEdEESC_Lin1ElE11searchLevelINS_12KNNResultSetIdlmEEEEbRT_PKdPNS
	0x7ffdb6039f1f - /home/miguel/Teste_Unity/PluginSource/teste_open3d/cmake-build-debug/open3d/lib/libOpen3D.so : _ZNK9nanoflann24KDTreeSingleIndexAdaptorINS_10L2_AdaptorIdNS_24KDTreeEigenMatrixAdaptorIN5Eigen3MapIKNS3_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS3_6StrideILi0ELi0EEEEELin1ENS_9metric_L2ELb0EEEdEESC_Lin1ElE11searchLevelINS_12KNNResultSetIdlmEEEEbRT_PKdPNS
	0x7ffdb6039f1f - /home/miguel/Teste_Unity/PluginSource/teste_open3d/cmake-build-debug/open3d/lib/libOpen3D.so : _ZNK9nanoflann24KDTreeSingleIndexAdaptorINS_10L2_AdaptorIdNS_24KDTreeEigenMatrixAdaptorIN5Eigen3MapIKNS3_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS3_6StrideILi0ELi0EEEEELin1ENS_9metric_L2ELb0EEEdEESC_Lin1ElE11searchLevelINS_12KNNResultSetIdlmEEEEbRT_PKdPNS
	0x7ffdb6039f1f - /home/miguel/Teste_Unity/PluginSource/teste_open3d/cmake-build-debug/open3d/lib/libOpen3D.so : _ZNK9nanoflann24KDTreeSingleIndexAdaptorINS_10L2_AdaptorIdNS_24KDTreeEigenMatrixAdaptorIN5Eigen3MapIKNS3_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS3_6StrideILi0ELi0EEEEELin1ENS_9metric_L2ELb0EEEdEESC_Lin1ElE11searchLevelINS_12KNNResultSetIdlmEEEEbRT_PKdPNS
	0x7ffdb6039f1f - /home/miguel/Teste_Unity/PluginSource/teste_open3d/cmake-build-debug/open3d/lib/libOpen3D.so : _ZNK9nanoflann24KDTreeSingleIndexAdaptorINS_10L2_AdaptorIdNS_24KDTreeEigenMatrixAdaptorIN5Eigen3MapIKNS3_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS3_6StrideILi0ELi0EEEEELin1ENS_9metric_L2ELb0EEEdEESC_Lin1ElE11searchLevelINS_12KNNResultSetIdlmEEEEbRT_PKdPNS
	0x7ffdb6039f1f - /home/miguel/Teste_Unity/PluginSource/teste_open3d/cmake-build-debug/open3d/lib/libOpen3D.so : _ZNK9nanoflann24KDTreeSingleIndexAdaptorINS_10L2_AdaptorIdNS_24KDTreeEigenMatrixAdaptorIN5Eigen3MapIKNS3_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS3_6StrideILi0ELi0EEEEELin1ENS_9metric_L2ELb0EEEdEESC_Lin1ElE11searchLevelINS_12KNNResultSetIdlmEEEEbRT_PKdPNS
	0x7ffdb6039020 - /home/miguel/Teste_Unity/PluginSource/teste_open3d/cmake-build-debug/open3d/lib/libOpen3D.so : _ZNK9nanoflann24KDTreeSingleIndexAdaptorINS_10L2_AdaptorIdNS_24KDTreeEigenMatrixAdaptorIN5Eigen3MapIKNS3_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS3_6StrideILi0ELi0EEEEELin1ENS_9metric_L2ELb0EEEdEESC_Lin1ElE13findNeighborsINS_12KNNResultSetIdlmEEEEbRT_PKdR
	0x7ffdb60383b5 - /home/miguel/Teste_Unity/PluginSource/teste_open3d/cmake-build-debug/open3d/lib/libOpen3D.so : _ZNK9nanoflann24KDTreeSingleIndexAdaptorINS_10L2_AdaptorIdNS_24KDTreeEigenMatrixAdaptorIN5Eigen3MapIKNS3_6MatrixIdLin1ELin1ELi0ELin1ELin1EEELi0ENS3_6StrideILi0ELi0EEEEELin1ENS_9metric_L2ELb0EEEdEESC_Lin1ElE9knnSearchEPKdmPlPdi
	0x7ffdb6035f10 - /home/miguel/Teste_Unity/PluginSource/teste_open3d/cmake-build-debug/open3d/lib/libOpen3D.so : _ZNK6open3d8geometry11KDTreeFlann9SearchKNNIN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEEiRKT_iRSt6vectorIiSaIiEERS9_IdSaIdEE
	0x7ffdb6035d68 - /home/miguel/Teste_Unity/PluginSource/teste_open3d/cmake-build-debug/open3d/lib/libOpen3D.so : _ZNK6open3d8geometry11KDTreeFlann6SearchIN5Eigen6MatrixIdLi3ELi1ELi0ELi3ELi1EEEEEiRKT_RKNS0_17KDTreeSearchParamERSt6vectorIiSaIiEERSC_IdSaIdEE
	0x7ffdb6078af9 - /home/miguel/Teste_Unity/PluginSource/teste_open3d/cmake-build-debug/open3d/lib/libOpen3D.so : 
	0x7ffdb26be556 - /usr/lib/x86_64-linux-gnu/libgomp.so.1 : 
	0x7fffed1286db - /lib/x86_64-linux-gnu/libpthread.so.0 : 
	0x7fffece5161f - /lib/x86_64-linux-gnu/libc.so.6 : clone

=================================================================
	Telemetry Dumper:
=================================================================
Thread 0x7ffdb11ad700 may have been prematurely finalized* Assertion at mono-threads.c:702, condition `info' not met, function:mono_thread_info_current, 
PlatformDependent/Linux/External/baselib/builds/Include/C/Baselib_ThreadLocalStorage.inl.h(13): Assertion failed (rc == 0)
Assertion failed on expression: 'GetConnectionState() == TcpProtobufClient::ConnectionState::Shutdown'
PlatformDependent/Linux/External/baselib/builds/Include/C/Baselib_ThreadLocalStorage.inl.h(13): Assertion failed (rc == 0)
AcceleratorClientConnectionCallback - disconnected - :0
PlatformDependent/Linux/External/baselib/builds/Include/C/Baselib_ThreadLocalStorage.inl.h(13): Assertion failed (rc == 0)
Obtained 25 stack frames.
#0  0x007fffed133980 in funlockfile
#1  0x007ffdb538657d in nanoflann::KNNResultSet<double, long, unsigned long>::worstDist() const
#2  0x007ffdb6039cce in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#3  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#4  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#5  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#6  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#7  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#8  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#9  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#10 0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#11 0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#12 0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#13 0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#14 0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#15 0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#16 0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#17 0x007ffdb6039020 in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::findNeighbors<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::SearchParams const&) const
#18 0x007ffdb60383b5 in nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::knnSearch(double const*, unsigned long, long*, double*, int) const
#19 0x007ffdb6035f10 in int open3d::geometry::KDTreeFlann::SearchKNN<Eigen::Matrix<double, 3, 1, 0, 3, 1> >(Eigen::Matrix<double, 3, 1, 0, 3, 1> const&, int, std::vector<int, std::allocator<int> >&, std::vector<double, std::allocator<double> >&) const
#20 0x007ffdb6035d68 in int open3d::geometry::KDTreeFlann::Search<Eigen::Matrix<double, 3, 1, 0, 3, 1> >(Eigen::Matrix<double, 3, 1, 0, 3, 1> const&, open3d::geometry::KDTreeSearchParam const&, std::vector<int, std::allocator<int> >&, std::vector<double, std::allocator<double> >&) const
#21 0x007ffdb6078af9 in open3d::geometry::PointCloud::EstimatePerPointCovariances(open3d::geometry::PointCloud const&, open3d::geometry::KDTreeSearchParam const&) [clone ._omp_fn.3]
#22 0x007ffdb26be556 in omp_fulfill_event
#23 0x007fffed1286db in start_thread
#24 0x007fffece5161f in clone
Launching bug reporter
Calling Deallocate on pointer, that can not be deallocated by allocator ALLOC_TEMP_AUDIO_FMOD stream thread
PlatformDependent/Linux/External/baselib/builds/Include/C/Baselib_ThreadLocalStorage.inl.h(13): Assertion failed (rc == 0)
PlatformDependent/Linux/External/baselib/builds/Include/C/Baselib_ThreadLocalStorage.inl.h(13): Assertion failed (rc == 0)
Obtained 21 stack frames.
#0  0x007fffed133980 in funlockfile
#1  0x007ffdb538657d in nanoflann::KNNResultSet<double, long, unsigned long>::worstDist() const
#2  0x007ffdb6039cce in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#3  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#4  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#5  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#6  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#7  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#8  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#9  0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#10 0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#11 0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#12 0x007ffdb6039f1f in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::searchLevel<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::KDTreeBaseClass<nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>, nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::Node*, double, std::vector<double, std::allocator<double> >&, float) const
#13 0x007ffdb6039020 in bool nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::findNeighbors<nanoflann::KNNResultSet<double, long, unsigned long> >(nanoflann::KNNResultSet<double, long, unsigned long>&, double const*, nanoflann::SearchParams const&) const
#14 0x007ffdb60383b5 in nanoflann::KDTreeSingleIndexAdaptor<nanoflann::L2_Adaptor<double, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, double>, nanoflann::KDTreeEigenMatrixAdaptor<Eigen::Map<Eigen::Matrix<double, -1, -1, 0, -1, -1> const, 0, Eigen::Stride<0, 0> >, -1, nanoflann::metric_L2, false>, -1, long>::knnSearch(double const*, unsigned long, long*, double*, int) const
#15 0x007ffdb6035f10 in int open3d::geometry::KDTreeFlann::SearchKNN<Eigen::Matrix<double, 3, 1, 0, 3, 1> >(Eigen::Matrix<double, 3, 1, 0, 3, 1> const&, int, std::vector<int, std::allocator<int> >&, std::vector<double, std::allocator<double> >&) const
#16 0x007ffdb6035d68 in int open3d::geometry::KDTreeFlann::Search<Eigen::Matrix<double, 3, 1, 0, 3, 1> >(Eigen::Matrix<double, 3, 1, 0, 3, 1> const&, open3d::geometry::KDTreeSearchParam const&, std::vector<int, std::allocator<int> >&, std::vector<double, std::allocator<double> >&) const
#17 0x007ffdb6078af9 in open3d::geometry::PointCloud::EstimatePerPointCovariances(open3d::geometry::PointCloud const&, open3d::geometry::KDTreeSearchParam const&) [clone ._omp_fn.3]
#18 0x007ffdb26be556 in omp_fulfill_event
#19 0x007fffed1286db in start_thread
#20 0x007fffece5161f in clone
Launching bug reporter
Calling Deallocate on pointer, that can not be deallocated by allocator ALLOC_TEMP_AUDIO_FMOD PulseAudio Mixer
PlatformDependent/Linux/External/baselib/builds/Include/C/Baselib_ThreadLocalStorage.inl.h(13): Assertion failed (rc == 0)
Caught fatal signal - signo:11 code:1 errno:0 addr:0x10
cp: cannot create regular file '/tmp/status_11843': Permission denied
Caught fatal signal - signo:11 code:1 errno:0 addr:0x10
cp: cannot create regular file '/tmp/maps_11843': Permission denied
cp: cannot create regular file '/tmp/smaps_11843': Permission denied
Obtained 16 stack frames.
#0  0x007fffed133980 in funlockfile
#1  0x00555557376a90 in MemoryProfiler::PushAllocationRoot(MemLabelId, bool)
#2  0x00555558200b5c in EditorMonoConsole::LogToConsoleImplementation(DebugStringToFileData const&)
#3  0x0055555820238b in LogToConsoleImplementation(DebugStringToFileData const&)
#4  0x00555559005416 in DebugStringToFilePostprocessedStacktrace(DebugStringToFileData const&)
#5  0x00555559005c3a in DebugStringToFile(DebugStringToFileData const&)
#6  0x00555556f7be0c in StackAllocator<(AllocatorMode)0>::Deallocate(void*)
#7  0x00555556f70032 in MemoryManager::Deallocate(void*, char const*, int)
#8  0x00555556f705c3 in MemoryManager::Deallocate(void*, MemLabelId const&, char const*, int)
#9  0x00555556f702e0 in MemoryManager::Deallocate(void*, MemLabelId const&, char const*, int)
#10 0x00555556f702e0 in MemoryManager::Deallocate(void*, MemLabelId const&, char const*, int)
#11 0x00555557b3bd74 in AudioManager::EngineThreadStarted(char const*)
#12 0x00555557b3bb69 in AudioManager::systemCallback(FMOD_SYSTEM*, FMOD_SYSTEM_CALLBACKTYPE, void*, void*)
#13 0x00555559da4574 in FMOD::Thread::callback(void*)
#14 0x007fffed1286db in start_thread
#15 0x007fffece5161f in clone
Obtained 16 stack frames.
#0  0x007fffed133980 in funlockfile
#1  0x00555557376a90 in MemoryProfiler::PushAllocationRoot(MemLabelId, bool)
#2  0x00555558200b5c in EditorMonoConsole::LogToConsoleImplementation(DebugStringToFileData const&)
#3  0x0055555820238b in LogToConsoleImplementation(DebugStringToFileData const&)
#4  0x00555559005416 in DebugStringToFilePostprocessedStacktrace(DebugStringToFileData const&)
#5  0x00555559005c3a in DebugStringToFile(DebugStringToFileData const&)
#6  0x00555556f7be0c in StackAllocator<(AllocatorMode)0>::Deallocate(void*)
#7  0x00555556f70032 in MemoryManager::Deallocate(void*, char const*, int)
#8  0x00555556f705c3 in MemoryManager::Deallocate(void*, MemLabelId const&, char const*, int)
#9  0x00555556f702e0 in MemoryManager::Deallocate(void*, MemLabelId const&, char const*, int)
#10 0x00555556f702e0 in MemoryManager::Deallocate(void*, MemLabelId const&, char const*, int)
#11 0x00555557b3bd74 in AudioManager::EngineThreadStarted(char const*)
#12 0x00555557b3bb69 in AudioManager::systemCallback(FMOD_SYSTEM*, FMOD_SYSTEM_CALLBACKTYPE, void*, void*)
#13 0x00555559da4574 in FMOD::Thread::callback(void*)
#14 0x007fffed1286db in start_thread
#15 0x007fffece5161f in clone
Attribute Qt::AA_EnableHighDpiScaling must be set before QCoreApplication is created.
Attribute Qt::AA_EnableHighDpiScaling must be set before QCoreApplication is created.
QObject: Cannot create children for a parent that is in a different thread.
(Parent is QObject(0x605770), parent's thread is QThread(0x398360), current thread is Thread(0x4af840)
QObject: Cannot create children for a parent that is in a different thread.
(Parent is QObject(0x605100), parent's thread is QThread(0x398360), current thread is Thread(0x4df850)

